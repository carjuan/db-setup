// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())

  username String    @unique
  password String
  products Product[]
}

model Product {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())

  name      String
  owner     String   @db.ObjectId
  belongsTo User     @relation(fields: [owner], references: [id])
  updates   Update[]
}

enum UPDATE_STATUS {
  IN_PROGRESS
  SHIPPED
  DEPRECATED
}

model Update {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime

  title   String
  status  UPDATE_STATUS @default(IN_PROGRESS)
  version String?
  asset   String?

  productId          String              @db.ObjectId
  product            Product             @relation(fields: [productId], references: [id])
  updateBulletPoints UpdateBulletPoint[]
}

enum UPDATE_TYPE {
  FEATURE
  IMPROVEMENT
  BUG
}

model UpdateBulletPoint {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime

  type        UPDATE_TYPE
  description String

  updateId String @db.ObjectId
  update   Update @relation(fields: [updateId], references: [id])
}
